import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class RelativeSortArray {
    public static int[] relativeSortArray(int[] arr1, int[] arr2) {
        // Create a frequency map for elements in arr1
        Map<Integer, Integer> freqMap = new HashMap<>();
        for (int num : arr1) {
            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);
        }

        int[] result = new int[arr1.length];
        int index = 0;

        // Process elements from arr2 in the order specified
        for (int num : arr2) {
            while (freqMap.containsKey(num) && freqMap.get(num) > 0) {
                result[index++] = num;
                freqMap.put(num, freqMap.get(num) - 1);
            }
        }

        // Process remaining elements not present in arr2
        for (int num : arr1) {
            while (freqMap.containsKey(num) && freqMap.get(num) > 0) {
                result[index++] = num;
                freqMap.put(num, freqMap.get(num) - 1);
            }
        }

        return result;
    }

    public static void main(String[] args) {
        int[] arr1 = {2, 3, 1, 3, 2, 4, 6, 7, 9, 2, 19};
        int[] arr2 = {2, 1, 4, 3, 9, 6};
        int[] result = relativeSortArray(arr1, arr2);

        System.out.println("Relative Sorted Array: " + Arrays.toString(result));
    }
}
